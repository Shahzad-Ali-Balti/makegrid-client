{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/components/page-header/page-header.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst PageHeader = ({title, children}: {\r\n    title: string,\r\n    children?: React.ReactNode\r\n}) => {\r\n    return (\r\n        <div className='flex justify-between w-full px-5 py-4 border-b flex-wrap gap-2'>\r\n            <h1 className='text-xl md:text-2xl lg:text-3xl font-semibold'>\r\n                {title}\r\n            </h1>\r\n            <div className='flex gap-4'>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n"],"names":[],"mappings":";;;;;AAEA,MAAM,aAAa,CAAC,EAAC,KAAK,EAAE,QAAQ,EAGnC;IACG,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BACT;;;;;;0BAEL,6LAAC;gBAAI,WAAU;0BACV;;;;;;;;;;;;AAIjB;KAdM;uCAgBS"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,8JAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,8JAAM,UAAU,QAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/components/tables/billing-history-table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n    ColumnDef,\r\n    ColumnFiltersState,\r\n    flexRender,\r\n    getCoreRowModel,\r\n    getFilteredRowModel,\r\n    getPaginationRowModel,\r\n    getSortedRowModel,\r\n    SortingState,\r\n    useReactTable,\r\n    VisibilityState,\r\n} from \"@tanstack/react-table\"\r\n\r\nimport {Button} from \"@/components/ui/button\"\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableHeader,\r\n    TableRow,\r\n} from \"@/components/ui/table\"\r\nimport {Badge} from \"@/components/ui/badge\";\r\nimport {cn} from \"@/lib/utils\";\r\n\r\nconst data: Payment[] = [\r\n    {\r\n        id: \"m5gr84i9\",\r\n        amount: 20,\r\n        invoiceNumber: \"m5gr84i9\",\r\n        date: new Date().toISOString(),\r\n        status: \"Pending\",\r\n        invoiceLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n        id: \"m5gr74i9\",\r\n        amount: 200,\r\n        invoiceNumber: \"m5gr74i9\",\r\n        date: new Date().toISOString(),\r\n        status: \"Paid\",\r\n        invoiceLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n        id: \"c2gr84i9\",\r\n        amount: 50,\r\n        invoiceNumber: \"m5gr84i9\",\r\n        date: new Date().toISOString(),\r\n        status: \"Failed\",\r\n        invoiceLink: \"https://www.google.com\",\r\n    },\r\n]\r\n\r\nexport type Payment = {\r\n    id: string\r\n    amount: number\r\n    invoiceNumber: string\r\n    date: string\r\n    status: \"Pending\" | \"Paid\" | \"Failed\"\r\n    invoiceLink: string\r\n}\r\n\r\nexport const columns: ColumnDef<Payment>[] = [\r\n    {\r\n        accessorKey: \"date\",\r\n        header: \"Date\",\r\n        cell: ({row}) => (\r\n            <div className=\"capitalize\">{row.getValue(\"date\")}</div>\r\n        ),\r\n    },\r\n    {\r\n        accessorKey: \"invoiceNumber\",\r\n        header: \"Invoice number\",\r\n        cell: ({row}) => <div>{row.getValue(\"invoiceNumber\")}</div>,\r\n    },\r\n    {\r\n        accessorKey: \"status\",\r\n        header: \"Status\",\r\n        cell: ({row}) => (\r\n            <Badge\r\n                className={cn(row.getValue(\"status\") === 'Pending' ? \"bg-orange-100 hover:bg-orange-100 text-orange-700 dark:bg-orange-500/30 dark:text-orange-300\" : row.getValue(\"status\") === 'Paid' ? \"bg-green-100 hover:bg-green-100 text-green-700 dark:bg-green-500/30 dark:text-green-300\" : row.getValue(\"status\") === 'Failed' ? \"bg-red-100 hover:bg-red-100 text-red-700 dark:bg-red-500/30 dark:text-red-300\" : \"\")}>{row.getValue(\"status\")}</Badge>\r\n        ),\r\n    },\r\n    {\r\n        accessorKey: \"amount\",\r\n        header: \"Amount\",\r\n        cell: ({row}) => {\r\n            const amount = parseFloat(row.getValue(\"amount\"))\r\n\r\n            // Format the amount as a dollar amount\r\n            const formatted = new Intl.NumberFormat(\"en-US\", {\r\n                style: \"currency\",\r\n                currency: \"USD\",\r\n            }).format(amount)\r\n\r\n            return <div className=\"text-right font-medium\">{formatted}</div>\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"invoiceLink\",\r\n        header: \"Invoice link\",\r\n        cell: ({row}) => (\r\n            <div className=\"text-right\">\r\n                <a className=\"text-primary hover:underline\"\r\n                   href={row.getValue(\"invoiceLink\")}\r\n                   target=\"_blank\">View</a>\r\n            </div>\r\n        ),\r\n    },\r\n]\r\n\r\nexport function BillingHistoryTable() {\r\n    const [sorting, setSorting] = React.useState<SortingState>([])\r\n    const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\r\n        []\r\n    )\r\n    const [columnVisibility, setColumnVisibility] =\r\n        React.useState<VisibilityState>({})\r\n    const [rowSelection, setRowSelection] = React.useState({})\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        onSortingChange: setSorting,\r\n        onColumnFiltersChange: setColumnFilters,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n        getFilteredRowModel: getFilteredRowModel(),\r\n        onColumnVisibilityChange: setColumnVisibility,\r\n        onRowSelectionChange: setRowSelection,\r\n        state: {\r\n            sorting,\r\n            columnFilters,\r\n            columnVisibility,\r\n            rowSelection,\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <div className=\"rounded-md border\">\r\n                <Table>\r\n                    <TableHeader>\r\n                        {table.getHeaderGroups().map((headerGroup) => (\r\n                            <TableRow key={headerGroup.id}>\r\n                                {headerGroup.headers.map((header) => {\r\n                                    return (\r\n                                        <TableHead key={header.id}>\r\n                                            {header.isPlaceholder\r\n                                                ? null\r\n                                                : flexRender(\r\n                                                    header.column.columnDef.header,\r\n                                                    header.getContext()\r\n                                                )}\r\n                                        </TableHead>\r\n                                    )\r\n                                })}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {table.getRowModel().rows?.length ? (\r\n                            table.getRowModel().rows.map((row) => (\r\n                                <TableRow\r\n                                    key={row.id}\r\n                                    data-state={row.getIsSelected() && \"selected\"}\r\n                                >\r\n                                    {row.getVisibleCells().map((cell) => (\r\n                                        <TableCell key={cell.id}>\r\n                                            {flexRender(\r\n                                                cell.column.columnDef.cell,\r\n                                                cell.getContext()\r\n                                            )}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))\r\n                        ) : (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={columns.length}\r\n                                    className=\"h-24 text-center\"\r\n                                >\r\n                                    No results.\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n            <div className=\"flex items-center justify-end space-x-2 pt-4\">\r\n                <div className=\"space-x-2\">\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => table.previousPage()}\r\n                        disabled={!table.getCanPreviousPage()}\r\n                    >\r\n                        Previous\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => table.nextPage()}\r\n                        disabled={!table.getCanNextPage()}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/CodingTheBrain/ai-3d-generator/ai-3d-generator-webapp/app/%28private%29/settings/billing/page.tsx"],"sourcesContent":["\"use client\"\r\nimport React from 'react';\r\nimport PageHeader from \"@/components/page-header/page-header\";\r\nimport {Card, CardContent, CardFooter} from \"@/components/ui/card\";\r\nimport {Button} from \"@/components/ui/button\";\r\nimport {Separator} from \"@/components/ui/separator\";\r\nimport {ChevronRightIcon, RocketIcon} from \"lucide-react\";\r\nimport {Label} from \"@/components/ui/label\";\r\nimport {Input} from \"@/components/ui/input\";\r\nimport {BillingHistoryTable} from \"@/components/tables/billing-history-table\";\r\n\r\nconst BillingPage = () => {\r\n    return (\r\n        <>\r\n            <PageHeader title=\"Billing\"/>\r\n            <div className=\"flex flex-col gap-8 p-5\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-semibold\">\r\n                        Overview\r\n                    </h2>\r\n                    <div className=\"flex gap-4 py-6\">\r\n                        <Card className=\"flex flex-grow flex-col p-0\">\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"p-4\">\r\n                                    <div className=\"flex justify-between\">\r\n                                        <h3 className=\"text-xl font-semibold\">\r\n                                            Current billing period\r\n                                        </h3>\r\n                                        <Button size=\"sm\" variant=\"ghost\">\r\n                                            View plan\r\n                                            <ChevronRightIcon/>\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"flex flex-col gap-2\">\r\n                                        <span\r\n                                            className=\"text-2xl font-bold flex gap-2 items-end\">\r\n                                            $0.00\r\n                                            <span\r\n                                                className=\"text-sm font-normal leading-7  text-muted-foreground\">\r\n                                                per month\r\n                                            </span>\r\n                                        </span>\r\n                                        <p className=\"text-sm text-muted-foreground\">\r\n                                            You&apos;re currently on a Free\r\n                                            plan.\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                            <Separator/>\r\n                            <CardFooter className=\"p-4 flex justify-between\">\r\n                                <span\r\n                                    className=\"text-xs text-muted-foreground\">\r\n                                    Looking to get more? Upgrade to enjoy additional credits, enhanced task priority, the ability to download community models and access to more advanced features.\r\n                                </span>\r\n                                <Button\r\n                                    className=\"relative overflow-hidden bg-gradient-to-r to-sky-400 from-blue-700 text-white flex items-center gap-2 px-4 py-2 rounded-md font-semibold transition-all duration-300 ease-in-out hover:brightness-110 hover:shadow-lg hover:shadow-sky-500/50 active:scale-95\"\r\n                                >\r\n                                    <RocketIcon/>\r\n                                    Upgrade\r\n                                </Button>\r\n                            </CardFooter>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"text-2xl font-semibold\">\r\n                        Payment method\r\n                    </h2>\r\n                    <div className=\"flex gap-4 py-6\">\r\n                        <Card className=\"flex flex-grow flex-col p-0\">\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"p-4\">\r\n                                    <p className=\"text-sm text-muted-foreground\">\r\n                                        No payment method.You can add one with a\r\n                                        subscription.\r\n                                    </p>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"text-2xl font-semibold\">\r\n                        Billing details\r\n                    </h2>\r\n                    <div className=\"flex gap-4 py-6\">\r\n                        <Card className=\"flex flex-grow flex-col p-0\">\r\n                            <CardContent className=\"p-0\">\r\n                                <div className=\"p-4 flex flex-col gap-6\">\r\n                                    <div className=\"grid w-1/2 gap-2\">\r\n                                        <Label htmlFor=\"name\">Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"John doe\"\r\n                                            id=\"name\"/>\r\n                                    </div>\r\n                                    <div className=\"grid w-1/2 gap-2\">\r\n                                        <Label htmlFor=\"email\">Email</Label>\r\n                                        <Input\r\n                                            type=\"email\"\r\n                                            placeholder=\"john.doe@example.com\"\r\n                                            id=\"email\"/>\r\n                                    </div>\r\n                                    <div className=\"grid w-1/2 gap-2\">\r\n                                        <Label htmlFor=\"address\">Address</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Your billing address\"\r\n                                            id=\"address\"/>\r\n                                    </div>\r\n                                    <div className=\"grid w-1/2 gap-2\">\r\n                                        <Label htmlFor=\"taxID\">Tax ID</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Your tax ID\"\r\n                                            id=\"taxID\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"text-2xl font-semibold\">\r\n                        Billing history\r\n                    </h2>\r\n                    <div className=\"flex gap-4 py-6\">\r\n                        <Card className=\"flex flex-grow flex-col p-0\">\r\n                            <CardContent className=\"p-4\">\r\n                                <BillingHistoryTable/>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BillingPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}